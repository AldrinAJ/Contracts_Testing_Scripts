digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
curBal = balances[asset]

IRs:
REF_2(uint256) -> balances[asset]
curBal(uint256) := REF_2(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
msg.sender.transfer(amount)

IRs:
Transfer dest:msg.sender value:amount"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
balances[asset] = curBal + amount

IRs:
REF_4(uint256) -> balances[asset]
TMP_5(uint256) = curBal + amount
REF_4 (->balances) := TMP_5(uint256)"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
uint256(0)

IRs:
TMP_6 = CONVERT 0 to uint256
RETURN TMP_6"];
}
